import { useEffect, useState } from "react";
import Board2 from "../Board/Board2"; 
import handleMemoClick2 from "../components/memoClick2";

const animalEmojis = [
  { emoji: "üê∂", id: 1 },
  { emoji: "üê±", id: 2 },
  { emoji: "üê≠", id: 3 },
  { emoji: "üê∞", id: 4 },
  { emoji: "ü¶ä", id: 5 },
  { emoji: "ü¶Å", id: 6 },
  { emoji: "üêØ", id: 7 },
  { emoji: "üêª", id: 8 },
  { emoji: "üê®", id: 9 },
  { emoji: "üêº", id: 10 },
  { emoji: "ü¶ì", id: 11 },
  { emoji: "üê¥", id: 12 },
  { emoji: "ü¶Ñ", id: 13 },
  { emoji: "üêÆ", id: 14 },
  { emoji: "üê∑", id: 15 },
  { emoji: "üê∏", id: 16 },
  { emoji: "üêî", id: 17 },
  { emoji: "üê¶", id: 18 },
  { emoji: "üêß", id: 19 },
  { emoji: "üê¢", id: 20 },
  { emoji: "turtle", id: 20 },
  { emoji: "dog", id: 1 },
  { emoji: "cat", id: 2 },
  { emoji: "mouse", id: 3 },
  { emoji: "rabbit", id: 4 },
  { emoji: "fox", id: 5 },
  { emoji: "lion", id: 6 },
  { emoji: "tiger", id: 7 },
  { emoji: "bear", id: 8 },
  { emoji: "koala", id: 9 },
  { emoji: "panda", id: 10 },
  { emoji: "zebra", id: 11 },
  { emoji: "horse", id: 12 },
  { emoji: "unicorn", id: 13 },
  { emoji: "cow", id: 14 },
  { emoji: "pig", id: 15 },
  { emoji: "frog", id: 16 },
  { emoji: "chicken", id: 17 },
  { emoji: "bird", id: 18 },
  { emoji: "penguin", id: 19 },
];

export const metadata = {
  title: 'Memory Game Online',
  description: 'Generated by create next app',
  developer: "Lucas Katz",
  keywords: "games - school - English - vocabulary"
}

const Animals = () => {
  const [shuffledAnimals, setShuffledAnimals] = useState([]);
  const [selectedMemoBlock, setselectedMemoBlock] = useState(null);
  const [animating, setAnimating] = useState(0); // Nuevo estado para contar las tarjetas animando
  const [comparing, setComparing] = useState(false); // Estado para indicar si se est√° comparando

  useEffect(() => {
    const shuffledArray = [...animalEmojis];
    for (let i = shuffledArray.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];
    }
    const formattedArray = shuffledArray.map((item, i) => ({ index: i, ...item, flipped: false }));
    setShuffledAnimals(formattedArray);
  }, []);

  const handleClick = (memoBlock) => {
    // Si se est√° comparando, no hacer nada
    console.log(memoBlock)
    if (comparing) {
      return;
    }

    // Verificar si ya hay dos tarjetas animando
    if (animating < 2) {
      handleMemoClick2(
        memoBlock,
        shuffledAnimals,
        setShuffledAnimals,
        selectedMemoBlock,
        setselectedMemoBlock,
        animating,
        setAnimating, // Pasa setAnimating a handleMemoClick
        comparing,
        setComparing, // Pasa setComparing a handleMemoClick
        animalEmojis // Pasa animalEmojis a handleMemoClick
      );
    }
  };

  return (
    <Board2 memoryCard={shuffledAnimals} handleClick={handleClick} />
  );
}

export default Animals;
